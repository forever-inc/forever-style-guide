<div class="card style-guide-partial" id="naming_system">
  <h2 class="style-guide-partial-title">We <%= fa_icon "heart" %> Modular & Scalable CSS</h2>
  <div class="style-guide-partial-description">
    We try to write modular and scalable CSS for Forever, so we use <%= link_to "SMACSS", "https://smacss.com/" %> as a model for how to logically organize and structure our CSS.
    <h4>Modules == Block == Object</h4>
    <p>The majority of the CSS that we write should be <em>modules</em>, in BEM these are known as blocks and mean the same thing.  Basically these are visual components on the screen that serve a discreet purpose.</p>
    <p>Modules should preferably be unique single words declarations, or underscore separated for multi-word declaration. <strong class="text-danger">DO NOT USE HYPHEN</strong>.</p>
<pre class="style-guide-partial-source prettyprint linenums show">
.object {}
.btn {}
.avatar {}
.photo_item {}
</pre>
    <p><%= link_to "Learn more about SMACSS modules.", "https://smacss.com/book/type-module" %></p>
    <h4>Sub-modules & Modifiers</h4>
    <p>Modules dependent on other modules (or <em>elements</em> as known in BEM) are declared via a hypen between the module and sub-module name.  Unlink BEM, modifiers may be declared in the same fashion as sub-modules.  Most complex modifiers are actually states, and are handled differently. Use your best judgement about whether your CSS is a modifier or a state.</p>

<pre class="style-guide-partial-source prettyprint linenums show">
.object-sub_object {}
.btn-primary {}
.avatar-account_manager {}
.photo_item-img-highlighted {}
</pre>
    <h4>Base, Layout & Theme</h4>
    <p>CSS that is more fundamental than a module such as base or layout should be prefixed with <code>.b-</code> or <code>.l-</code> accordingly.  Similarly theme's should be prefixed with <code>.t-</code>.</p>

<pre class="style-guide-partial-source prettyprint linenums show">
.b-base_name {}
.l-layout_name {}
.t-theme_name {}
</pre>
    <p><%= link_to "Learn more about SMACSS base, layout & theme.", "https://smacss.com/book/type-base" %></p>
    <h4>States</h4>
    <p>States are distinct from modifiers in that they communicate a relationship to JavaScript manipulation.  Any class that is set or toggled via JS should have a separate state selector related to, but distinct from the dependent module selector.</p>
<pre class="style-guide-partial-source prettyprint linenums show">
.object-is-toggled {}
.photo_item-is-selected {}
</pre>
    <p><%= link_to "Learn more about SMACSS states.", "https://smacss.com/book/type-state" %></p>
  </div>
</div>
